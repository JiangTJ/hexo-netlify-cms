<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Content Manager</title>
</head>
<body>
  <!-- Include the script that builds the page and powers Netlify CMS -->
  <script src="https://cdn.jsdelivr.net/npm/netlify-cms@2/dist/netlify-cms.js"></script>
  <script>
  var hexo = {
    root: '<%= root %>'
  };
  function url_for(url) {
    return (hexo.root + url).replace(/\/{2,}/g, '/');
  }
  CMS.registerEditorComponent({
    // Internal id of the component
    id: "TagImage",
    // Visible label
    label: "TagImage",
    // Fields the user need to fill out when adding an instance of the component
    fields: [{name: 'url', label: 'Image Url', widget: 'file'}],
    // Pattern to identify a block as being an instance of this component
    pattern: /^\{\% img (\S+) \%\}$/,
    // Function to extract data elements from the regexp match
    fromBlock: function(match) {
      return {
        url: match[0].split(' ')[2]
      };
    },
    // Function to create a text block from an instance of this component
    toBlock: function(obj) {
      return '{% img ' + obj.url + ' %}';
    },
    // Preview output for this component. Can either be a string or a React component
    // (component gives better render performance)
    toPreview: function(obj) {
      return '<img src="' + url_for(obj.url) + '" />';
    }
  });
  </script>
  <script>
  CMS.registerEditorComponent({
    // Internal id of the component
    id: "youtube",
    // Visible label
    label: "Youtube",
    // Fields the user need to fill out when adding an instance of the component
    fields: [{name: 'id', label: 'Youtube Video ID', widget: 'string'}],
    // Pattern to identify a block as being an instance of this component
    pattern: /^\{\% youtube (\S+) \%\}$/,
    // Function to extract data elements from the regexp match
    fromBlock: function(match) {
      return {
        id: match[0].split(' ')[2]
      };
    },
    // Function to create a text block from an instance of this component
    toBlock: function(obj) {
      return 'youtube ' + obj.id;
    },
    // Preview output for this component. Can either be a string or a React component
    // (component gives better render performance)
    toPreview: function(obj) {
      return (
        '<img src="http://img.youtube.com/vi/' + obj.id + '/maxresdefault.jpg" alt="Youtube Video"/>'
      );
    }
  });
  </script>
</body>
</html>